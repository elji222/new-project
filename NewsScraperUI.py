#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jun 25, 2018 01:13:41 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import NewsScraperUI_support  

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = NewsScraperUI (root)
    NewsScraperUI_support.init(root, top)
    root.resizable(width=False, height=False)
    root.mainloop()

w = None
def create_NewsScraperUI(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = NewsScraperUI (w)
    NewsScraperUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_NewsScraperUI():
    global w
    w.destroy()
    w = None


class NewsScraperUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Segoe UI} -size 14 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 18 -weight normal -slant "  \
            "italic -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("907x450+446+159")
        top.title("News Scraper Alpha")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.NewsScraperLBL = ttk.Label(top)
        self.NewsScraperLBL.place(relx=0.41, rely=0.02, height=39, width=186)
        self.NewsScraperLBL.configure(background="#d9d9d9")
        self.NewsScraperLBL.configure(foreground="#000000")
        self.NewsScraperLBL.configure(font=font9)
        self.NewsScraperLBL.configure(relief=FLAT)
        self.NewsScraperLBL.configure(text='''News Scraper''')

        self.ScrapeSourceLBL = ttk.Label(top)
        self.ScrapeSourceLBL.place(relx=0.02, rely=0.15, height=29, width=106)
        self.ScrapeSourceLBL.configure(background="#d9d9d9")
        self.ScrapeSourceLBL.configure(foreground="#000000")
        self.ScrapeSourceLBL.configure(font=font10)
        self.ScrapeSourceLBL.configure(relief=FLAT)
        self.ScrapeSourceLBL.configure(text='''Source Link:''')

        self.ScrapedUrlENTR = ttk.Entry(top)
        self.ScrapedUrlENTR.place(relx=0.14, rely=0.15, relheight=0.07
                , relwidth=0.7)
        self.ScrapedUrlENTR.configure(font=font10)
        self.ScrapedUrlENTR.configure(takefocus="")
        self.ScrapedUrlENTR.configure(cursor="ibeam")

        self.ScrapeBTN = ttk.Button(top)
        self.ScrapeBTN.place(relx=0.86, rely=0.15, height=35, width=106)
        self.ScrapeBTN.configure(command=NewsScraperUI_support.on_scrape_click)
        self.ScrapeBTN.configure(takefocus="")
        self.ScrapeBTN.configure(text='''Scrape''')

        self.ArticleThumbnailCanvas = Canvas(top)
        self.ArticleThumbnailCanvas.place(relx=0.02, rely=0.25, relheight=0.27
                , relwidth=0.14)
        self.ArticleThumbnailCanvas.configure(background="#d9d9d9")
        self.ArticleThumbnailCanvas.configure(borderwidth="2")
        self.ArticleThumbnailCanvas.configure(highlightbackground="#d9d9d9")
        self.ArticleThumbnailCanvas.configure(highlightcolor="black")
        self.ArticleThumbnailCanvas.configure(insertbackground="black")
        self.ArticleThumbnailCanvas.configure(relief=RIDGE)
        self.ArticleThumbnailCanvas.configure(selectbackground="#c4c4c4")
        self.ArticleThumbnailCanvas.configure(selectforeground="black")
        self.ArticleThumbnailCanvas.configure(width=125)
        self.ScrapedImage = self.ArticleThumbnailCanvas.create_image(0, 0, anchor = NW, image = None)

        self.ArticleSummaryTBX = Text(top)
        self.ArticleSummaryTBX.place(relx=0.17, rely=0.24, relheight=0.28
                , relwidth=0.81)
        self.ArticleSummaryTBX.configure(background="#d9d9d9")
        self.ArticleSummaryTBX.configure(font="TkTextFont")
        self.ArticleSummaryTBX.configure(foreground="black")
        self.ArticleSummaryTBX.configure(highlightbackground="#d9d9d9")
        self.ArticleSummaryTBX.configure(highlightcolor="black")
        self.ArticleSummaryTBX.configure(insertbackground="black")
        self.ArticleSummaryTBX.configure(relief=FLAT)
        self.ArticleSummaryTBX.configure(selectbackground="#c4c4c4")
        self.ArticleSummaryTBX.configure(selectforeground="black")
        self.ArticleSummaryTBX.configure(width=734)
        self.ArticleSummaryTBX.configure(wrap=WORD)
        self.ArticleSummaryTBX.configure(state="disabled")

        self.TranslatedArticleSummaryTBX = Text(top)
        self.TranslatedArticleSummaryTBX.place(relx=0.02, rely=0.6, relheight=0.3
                , relwidth=0.95)
        self.TranslatedArticleSummaryTBX.configure(background="white")
        self.TranslatedArticleSummaryTBX.configure(font="TkTextFont")
        self.TranslatedArticleSummaryTBX.configure(foreground="black")
        self.TranslatedArticleSummaryTBX.configure(highlightbackground="#d9d9d9")
        self.TranslatedArticleSummaryTBX.configure(highlightcolor="black")
        self.TranslatedArticleSummaryTBX.configure(insertbackground="black")
        self.TranslatedArticleSummaryTBX.configure(selectbackground="#c4c4c4")
        self.TranslatedArticleSummaryTBX.configure(selectforeground="black")
        self.TranslatedArticleSummaryTBX.configure(width=864)
        self.TranslatedArticleSummaryTBX.configure(wrap=WORD)
        self.TranslatedArticleSummaryTBX.configure(state="disabled")

        self.TranslatedTextLBL = ttk.Label(top)
        self.TranslatedTextLBL.place(relx=0.02, rely=0.53, height=29, width=136)
        self.TranslatedTextLBL.configure(background="#d9d9d9")
        self.TranslatedTextLBL.configure(foreground="#000000")
        self.TranslatedTextLBL.configure(font=font10)
        self.TranslatedTextLBL.configure(relief=FLAT)
        self.TranslatedTextLBL.configure(text='''Translated Text:''')

        self.CopyBTN = ttk.Button(top)
        self.CopyBTN.place(relx=0.02, rely=0.91, height=25, width=866)
        self.CopyBTN.configure(command=NewsScraperUI_support.on_copy_click)
        self.CopyBTN.configure(takefocus="")
        self.CopyBTN.configure(text='''Copy Translated Summary''')
        self.CopyBTN.configure(state="disabled")






if __name__ == '__main__':
    vp_start_gui()



